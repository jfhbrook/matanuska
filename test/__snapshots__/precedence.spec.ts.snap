// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`operator precedence > 15 = - 14 + 13 * 12 or 11 / 10 < 9 != 8 <> 7 == 6 > 5 - 4 and 3 >= 2 >= 1 1`] = `
Logical {
  "left": Binary {
    "left": IntLiteral {
      "value": 15,
    },
    "op": "==",
    "right": Binary {
      "left": Unary {
        "expr": IntLiteral {
          "value": 14,
        },
        "op": "-",
      },
      "op": "+",
      "right": Binary {
        "left": IntLiteral {
          "value": 13,
        },
        "op": "*",
        "right": IntLiteral {
          "value": 12,
        },
      },
    },
  },
  "op": "or",
  "right": Logical {
    "left": Binary {
      "left": Binary {
        "left": Binary {
          "left": Binary {
            "left": Binary {
              "left": IntLiteral {
                "value": 11,
              },
              "op": "/",
              "right": IntLiteral {
                "value": 10,
              },
            },
            "op": "<",
            "right": IntLiteral {
              "value": 9,
            },
          },
          "op": "<>",
          "right": IntLiteral {
            "value": 8,
          },
        },
        "op": "<>",
        "right": IntLiteral {
          "value": 7,
        },
      },
      "op": "==",
      "right": Binary {
        "left": IntLiteral {
          "value": 6,
        },
        "op": ">",
        "right": Binary {
          "left": IntLiteral {
            "value": 5,
          },
          "op": "-",
          "right": IntLiteral {
            "value": 4,
          },
        },
      },
    },
    "op": "and",
    "right": Binary {
      "left": Binary {
        "left": IntLiteral {
          "value": 3,
        },
        "op": ">=",
        "right": IntLiteral {
          "value": 2,
        },
      },
      "op": ">=",
      "right": IntLiteral {
        "value": 1,
      },
    },
  },
}
`;

exports[`operator precedence > 15 = - 14 + 13 * 12 or 11 / 10 < 9 != 8 <> 7 == 6 > 5 - 4 and 3 >= 2 >= 1 2`] = `[ParseWarning]`;
