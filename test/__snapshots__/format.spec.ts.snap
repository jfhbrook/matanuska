// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`given a DefaultFormatter > instructions 1`] = `"Print('hello')"`;

exports[`given a DefaultFormatter > instructions 2`] = `"Exit(0)"`;

exports[`given a DefaultFormatter > instructions 3`] = `"Rem(a witty remark)"`;

exports[`given a DefaultFormatter > instructions 4`] = `"New(null)"`;

exports[`given a DefaultFormatter > instructions 5`] = `"Load('./examples/001-hello-world.bas', run=true)"`;

exports[`given a DefaultFormatter > instructions 6`] = `"List"`;

exports[`given a DefaultFormatter > instructions 7`] = `"New(null)"`;

exports[`given a DefaultFormatter > instructions 8`] = `"Run"`;

exports[`given a DefaultFormatter > instructions 9`] = `"Let(i%, 1)"`;

exports[`given a DefaultFormatter > instructions 10`] = `"ShortIf (true) { Print('true') }"`;

exports[`given a DefaultFormatter > instructions 11`] = `"ShortIf (true) { Print('true') } { Print('false') }"`;

exports[`given a DefaultFormatter > instructions 12`] = `"If (true)"`;

exports[`given a DefaultFormatter > instructions 13`] = `"Else"`;

exports[`given a DefaultFormatter > instructions 14`] = `"ElseIf (true)"`;

exports[`given a DefaultFormatter > instructions 15`] = `"End"`;

exports[`given a DefaultFormatter > it formats a BaseException 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
BaseException: message"
`;

exports[`given a DefaultFormatter > it formats a BaseFault 1`] = `
"=== INTERNAL FAULT ===

--- Internal Stack Trace ---
BaseFault: message
    at {CWD}/test/format.spec.ts:277:10
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:146:14
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:533:11
    at runWithTimeout (file://{CWD}/node_modules/@vitest/runner/dist/index.js:61:7)
    at runTest (file://{CWD}/node_modules/@vitest/runner/dist/index.js:986:17)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runFiles (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1199:5)
    at startTests (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1208:3)
    at file://{CWD}/node_modules/vitest/dist/chunks/runBaseTests.D-Gcin7G.js:130:11"
`;

exports[`given a DefaultFormatter > it formats a BaseWarning 1`] = `"/home/josh/script.bas:100: BaseWarning: message"`;

exports[`given a DefaultFormatter > it formats a BaseWarning without a traceback 1`] = `"<unknown>:<?>: BaseWarning: message"`;

exports[`given a DefaultFormatter > it formats a Binary expression 1`] = `
"Binary(+) {
  1,
  1,
}"
`;

exports[`given a DefaultFormatter > it formats a BoolLiteral 1`] = `"true"`;

exports[`given a DefaultFormatter > it formats a Exception 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
Exception: message"
`;

exports[`given a DefaultFormatter > it formats a FileError with one file 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
FileError EACCES: message
  Input File: /home/josh/script.bas"
`;

exports[`given a DefaultFormatter > it formats a FileError with two files 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
FileError EACCES: message
  Source File: /home/josh/script.bas
  Destination File: another.bas"
`;

exports[`given a DefaultFormatter > it formats a Instr 1`] = `"Print('hello')"`;

exports[`given a DefaultFormatter > it formats a Line 1`] = `
"Line(100) [
  Print('hello world'),
]"
`;

exports[`given a DefaultFormatter > it formats a NilLiteral 1`] = `"nil"`;

exports[`given a DefaultFormatter > it formats a NotImplementedError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
NotImplementedError: message"
`;

exports[`given a DefaultFormatter > it formats a Program 1`] = `
"Program(
  Line(100) [
    Print('hello world'),
  ],
)"
`;

exports[`given a DefaultFormatter > it formats a PromptLiteral 1`] = `"'\\u@\\h:\\w\\$'"`;

exports[`given a DefaultFormatter > it formats a RealLiteral 1`] = `"123.456"`;

exports[`given a DefaultFormatter > it formats a RuntimeError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
RuntimeError: message"
`;

exports[`given a DefaultFormatter > it formats a RuntimeFault 1`] = `
"=== RUNTIME FAULT ===

--- Internal Stack Trace ---
AssertionError [ERR_ASSERTION]: underlying assertion
    at new AssertionError (node:internal/assert/assertion_error:447:5)
    at {CWD}/test/format.spec.ts:279:18
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:146:14
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:533:11
    at runWithTimeout (file://{CWD}/node_modules/@vitest/runner/dist/index.js:61:7)
    at runTest (file://{CWD}/node_modules/@vitest/runner/dist/index.js:986:17)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runFiles (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1199:5)
    at startTests (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1208:3)

--- Traceback ---
Traceback:
  File '/home/josh/script.bas', line 100

--- Versions ---
Matanuska BASIC: v0.0.1
TypeScript: v5.5.2
Node.js: NODE_VERSION

This is a bug in Matanuska BASIC. If you copy this entire message and post it
to the issues tracker:

    https://github.com/jfhbrook/matanuska/issues

the developers will do their best to fix it - and more importantly, they will
owe you a beer, coffee or beverage of your choice. 🍻

"
`;

exports[`given a DefaultFormatter > it formats a StringLiteral 1`] = `"'hello'"`;

exports[`given a DefaultFormatter > it formats a Token 1`] = `
"Token(<string>) {
  index: 0,
  row: 0,
  offsetStart: 0,
  offsetEnd: 9,
  text: "'hello\\q'",
  value: 'hello\\q',
}"
`;

exports[`given a DefaultFormatter > it formats a Traceback 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100"
`;

exports[`given a DefaultFormatter > it formats a TypeError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
TypeError: message
  Value: 123
  From: integer
  To: nil"
`;

exports[`given a DefaultFormatter > it formats a Unary expression 1`] = `
"Unary(-) {
  1,
}"
`;

exports[`given a DefaultFormatter > it formats a UsageFault 1`] = `"Usage: lol"`;

exports[`given a DefaultFormatter > it formats a ZeroDivisionError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
ZeroDivisionError: Cannot divide 1 by 0"
`;

exports[`given a DefaultFormatter > it formats a boolean 1`] = `"true"`;

exports[`given a DefaultFormatter > it formats a native value 1`] = `"Set(3) { 'a', 'b', 'c' }"`;

exports[`given a DefaultFormatter > it formats a null value 1`] = `"null"`;

exports[`given a DefaultFormatter > it formats a number 1`] = `"12345"`;

exports[`given a DefaultFormatter > it formats a string 1`] = `"hello"`;

exports[`given a DefaultFormatter > it formats an AssertionError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
AssertionError: message"
`;

exports[`given a DefaultFormatter > it formats an Exit with a message 1`] = `"Exit 0: message"`;

exports[`given a DefaultFormatter > it formats an Exit without message 1`] = `"Exit 0"`;

exports[`given a DefaultFormatter > it formats an IntLiteral 1`] = `"12"`;

exports[`given a DefaultFormatter > it formats an OsError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
OsError EADDRINUSE: message"
`;

exports[`given a DefaultFormatter > it formats an array of values 1`] = `
"[
  1,
  'two',
  true,
]"
`;

exports[`given a DefaultFormatter > it formats an undefined value 1`] = `"undefined"`;

exports[`given a DefaultFormatter > when it is a line > it formats a ParseError 1`] = `
"/home/josh/script.bas:100:22: error: expected )
  100 print someFn(ident
                        ^
/home/josh/script.bas:100:17: warning: identifier has no sigil
  100 print someFn(ident
                   ^"
`;

exports[`given a DefaultFormatter > when it is a line > it formats a ParseWarning 1`] = `
"/home/josh/script.bas:100:17: warning: identifier has no sigil
  100 print someFn(ident
                   ^"
`;

exports[`given a DefaultFormatter > when it is a line > it formats a SyntaxError 1`] = `
"/home/josh/script.bas:100:22: error: expected )
  100 print someFn(ident
                        ^"
`;

exports[`given a DefaultFormatter > when it is a line > it formats a SyntaxWarning 1`] = `
"/home/josh/script.bas:100:22: warning: expected )
  100 print someFn(ident
                        ^"
`;

exports[`given a DefaultFormatter > when it is not a line > it formats a ParseError 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): error: expected )
  print someFn(ident
                        ^
/home/josh/script.bas:<R0>:17 (after line 100): warning: identifier has no sigil
  print someFn(ident
                   ^"
`;

exports[`given a DefaultFormatter > when it is not a line > it formats a ParseWarning 1`] = `
"/home/josh/script.bas:<R0>:17 (after line 100): warning: identifier has no sigil
  print someFn(ident
                   ^"
`;

exports[`given a DefaultFormatter > when it is not a line > it formats a SyntaxError 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): error: expected )
  print someFn(ident
                        ^"
`;

exports[`given a DefaultFormatter > when it is not a line > it formats a SyntaxWarning 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): warning: expected )
  print someFn(ident
                        ^"
`;

exports[`given a Inspector > instructions 1`] = `"Print('hello')"`;

exports[`given a Inspector > instructions 2`] = `"Exit(0)"`;

exports[`given a Inspector > instructions 3`] = `"Rem(a witty remark)"`;

exports[`given a Inspector > instructions 4`] = `"New([1mnull[22m)"`;

exports[`given a Inspector > instructions 5`] = `"Load('./examples/001-hello-world.bas', run=true)"`;

exports[`given a Inspector > instructions 6`] = `"List"`;

exports[`given a Inspector > instructions 7`] = `"New([1mnull[22m)"`;

exports[`given a Inspector > instructions 8`] = `"Run"`;

exports[`given a Inspector > instructions 9`] = `"Let(i%, 1)"`;

exports[`given a Inspector > instructions 10`] = `"ShortIf (true) { Print('true') }"`;

exports[`given a Inspector > instructions 11`] = `"ShortIf (true) { Print('true') } { Print('false') }"`;

exports[`given a Inspector > instructions 12`] = `"If (true)"`;

exports[`given a Inspector > instructions 13`] = `"Else"`;

exports[`given a Inspector > instructions 14`] = `"ElseIf (true)"`;

exports[`given a Inspector > instructions 15`] = `"End"`;

exports[`given a Inspector > it formats a BaseException 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
BaseException: message"
`;

exports[`given a Inspector > it formats a BaseFault 1`] = `
"=== INTERNAL FAULT ===

--- Internal Stack Trace ---
BaseFault: message
    at {CWD}/test/format.spec.ts:277:10
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:146:14
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:533:11
    at runWithTimeout (file://{CWD}/node_modules/@vitest/runner/dist/index.js:61:7)
    at runTest (file://{CWD}/node_modules/@vitest/runner/dist/index.js:986:17)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runFiles (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1199:5)
    at startTests (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1208:3)
    at file://{CWD}/node_modules/vitest/dist/chunks/runBaseTests.D-Gcin7G.js:130:11"
`;

exports[`given a Inspector > it formats a BaseWarning 1`] = `"/home/josh/script.bas:100: BaseWarning: message"`;

exports[`given a Inspector > it formats a BaseWarning without a traceback 1`] = `"<unknown>:<?>: BaseWarning: message"`;

exports[`given a Inspector > it formats a Binary expression 1`] = `
"Binary(+) {
  1,
  1,
}"
`;

exports[`given a Inspector > it formats a BoolLiteral 1`] = `"true"`;

exports[`given a Inspector > it formats a Exception 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
Exception: message"
`;

exports[`given a Inspector > it formats a FileError with one file 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
FileError EACCES: message
  Input File: /home/josh/script.bas"
`;

exports[`given a Inspector > it formats a FileError with two files 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
FileError EACCES: message
  Source File: /home/josh/script.bas
  Destination File: another.bas"
`;

exports[`given a Inspector > it formats a Instr 1`] = `"Print('hello')"`;

exports[`given a Inspector > it formats a Line 1`] = `
"Line(100) [
  Print('hello world'),
]"
`;

exports[`given a Inspector > it formats a NilLiteral 1`] = `"nil"`;

exports[`given a Inspector > it formats a NotImplementedError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
NotImplementedError: message"
`;

exports[`given a Inspector > it formats a Program 1`] = `
"Program(
  Line(100) [
    Print('hello world'),
  ],
)"
`;

exports[`given a Inspector > it formats a PromptLiteral 1`] = `"'\\u@\\h:\\w\\$'"`;

exports[`given a Inspector > it formats a RealLiteral 1`] = `"123.456"`;

exports[`given a Inspector > it formats a RuntimeError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
RuntimeError: message"
`;

exports[`given a Inspector > it formats a RuntimeFault 1`] = `
"=== RUNTIME FAULT ===

--- Internal Stack Trace ---
AssertionError [ERR_ASSERTION]: underlying assertion
    at new AssertionError (node:internal/assert/assertion_error:447:5)
    at {CWD}/test/format.spec.ts:279:18
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:146:14
    at file://{CWD}/node_modules/@vitest/runner/dist/index.js:533:11
    at runWithTimeout (file://{CWD}/node_modules/@vitest/runner/dist/index.js:61:7)
    at runTest (file://{CWD}/node_modules/@vitest/runner/dist/index.js:986:17)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runSuite (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1142:15)
    at runFiles (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1199:5)
    at startTests (file://{CWD}/node_modules/@vitest/runner/dist/index.js:1208:3)

--- Traceback ---
Traceback:
  File '/home/josh/script.bas', line 100

--- Versions ---
Matanuska BASIC: v0.0.1
TypeScript: v5.5.2
Node.js: NODE_VERSION

This is a bug in Matanuska BASIC. If you copy this entire message and post it
to the issues tracker:

    https://github.com/jfhbrook/matanuska/issues

the developers will do their best to fix it - and more importantly, they will
owe you a beer, coffee or beverage of your choice. 🍻

"
`;

exports[`given a Inspector > it formats a StringLiteral 1`] = `"'hello'"`;

exports[`given a Inspector > it formats a Token 1`] = `
"Token(<string>) {
  index: 0,
  row: 0,
  offsetStart: 0,
  offsetEnd: 9,
  text: "'hello\\q'",
  value: 'hello\\q',
}"
`;

exports[`given a Inspector > it formats a Traceback 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100"
`;

exports[`given a Inspector > it formats a TypeError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
TypeError: message
  Value: [33m123[39m
  From: integer
  To: nil"
`;

exports[`given a Inspector > it formats a Unary expression 1`] = `
"Unary(-) {
  1,
}"
`;

exports[`given a Inspector > it formats a UsageFault 1`] = `"Usage: lol"`;

exports[`given a Inspector > it formats a ZeroDivisionError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
ZeroDivisionError: Cannot divide 1 by 0"
`;

exports[`given a Inspector > it formats a boolean 1`] = `"[33mtrue[39m"`;

exports[`given a Inspector > it formats a native value 1`] = `"Set(3) { [32m'a'[39m, [32m'b'[39m, [32m'c'[39m }"`;

exports[`given a Inspector > it formats a null value 1`] = `"[1mnull[22m"`;

exports[`given a Inspector > it formats a number 1`] = `"[33m12345[39m"`;

exports[`given a Inspector > it formats a string 1`] = `"[32m'hello'[39m"`;

exports[`given a Inspector > it formats an AssertionError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
AssertionError: message"
`;

exports[`given a Inspector > it formats an Exit with a message 1`] = `"Exit [32m0[39m: message"`;

exports[`given a Inspector > it formats an Exit without message 1`] = `"Exit [32m0[39m"`;

exports[`given a Inspector > it formats an IntLiteral 1`] = `"12"`;

exports[`given a Inspector > it formats an OsError 1`] = `
"Traceback:
  File '/home/josh/script.bas', line 100
OsError EADDRINUSE: message"
`;

exports[`given a Inspector > it formats an array of values 1`] = `
"[
  [33m1[39m,
  [32m'two'[39m,
  [33mtrue[39m,
]"
`;

exports[`given a Inspector > it formats an undefined value 1`] = `"[90mundefined[39m"`;

exports[`given a Inspector > when it is a line > it formats a ParseError 1`] = `
"/home/josh/script.bas:100:22: error: expected )
  100 print someFn(ident
                        ^
/home/josh/script.bas:100:17: warning: identifier has no sigil
  100 print someFn(ident
                   ^"
`;

exports[`given a Inspector > when it is a line > it formats a ParseWarning 1`] = `
"/home/josh/script.bas:100:17: warning: identifier has no sigil
  100 print someFn(ident
                   ^"
`;

exports[`given a Inspector > when it is a line > it formats a SyntaxError 1`] = `
"/home/josh/script.bas:100:22: error: expected )
  100 print someFn(ident
                        ^"
`;

exports[`given a Inspector > when it is a line > it formats a SyntaxWarning 1`] = `
"/home/josh/script.bas:100:22: warning: expected )
  100 print someFn(ident
                        ^"
`;

exports[`given a Inspector > when it is not a line > it formats a ParseError 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): error: expected )
  print someFn(ident
                        ^
/home/josh/script.bas:<R0>:17 (after line 100): warning: identifier has no sigil
  print someFn(ident
                   ^"
`;

exports[`given a Inspector > when it is not a line > it formats a ParseWarning 1`] = `
"/home/josh/script.bas:<R0>:17 (after line 100): warning: identifier has no sigil
  print someFn(ident
                   ^"
`;

exports[`given a Inspector > when it is not a line > it formats a SyntaxError 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): error: expected )
  print someFn(ident
                        ^"
`;

exports[`given a Inspector > when it is not a line > it formats a SyntaxWarning 1`] = `
"/home/josh/script.bas:<R0>:22 (after line 100): warning: expected )
  print someFn(ident
                        ^"
`;
