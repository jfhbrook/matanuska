// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`accidentally an entire semicolon 1`] = `
"<input>:<R1>:11 (at the beginning): error: Unexpected token ;
  print 1 + 1;
             ^"
`;

exports[`bare expression starting with an integer 1`] = `
"<input>:1:0: warning: Line numbers should be in factors of 10
  1 + 1
  ^
<input>:1:2: error: Unexpected token +
  1 + 1
    ^"
`;

exports[`load > load with no filename 1`] = `
"<input>:<R1>:4 (at the beginning): error: Missing argument 'filename'
  load
      ^"
`;

exports[`load > load with two positional arguments 1`] = `
"<input>:<R1>:5 (at the beginning): error: Unexpected argument
  load "./examples/001-hello-world.bas" "extra"
       ^"
`;

exports[`non-numbered expression (1 != 1) 1`] = `
"<input>:<R1>:6 (at the beginning): warning: Use \`<>\` instead of \`!=\` for equality
  (1 != 1)
        ^"
`;

exports[`non-numbered expression (1 = 1) 1`] = `
"<input>:<R1>:5 (at the beginning): warning: Use \`==\` instead of \`==\` for equality
  (1 = 1)
       ^"
`;

exports[`non-numbered invalid string escape 1`] = `
"<input>:<R1>:1 (at the beginning): warning: Invalid escape sequence \`\\q\` in string '\\q'
  '\\q'
   ^"
`;

exports[`numbered expression (1 != 1) 1`] = `
"<input>:100:10: warning: Use \`<>\` instead of \`!=\` for equality
  100 (1 != 1)
            ^"
`;

exports[`numbered expression (1 = 1) 1`] = `
"<input>:100:9: warning: Use \`==\` instead of \`==\` for equality
  100 (1 = 1)
           ^"
`;

exports[`numbered invalid string escape 1`] = `
"<input>:100:5: warning: Invalid escape sequence \`\\q\` in string '\\q'
  100 '\\q'
       ^"
`;

exports[`out of order program 1`] = `
"/home/josh/script.bas:100:0: warning: Line numbers should be in order
  100 print "goodbye"
  ^"
`;

exports[`print instruction > non-numbered, without arguments 1`] = `
"<input>:<R1>:5 (at the beginning): error: Unexpected token <EOF>
  print
       ^"
`;

exports[`print instruction > numbered, without arguments 1`] = `
"<input>:100:9: error: Unexpected token <EOF>
  100 print
           ^"
`;

exports[`program with a negative line number 1`] = `
"/home/josh/script.bas:<R2>:0 (after line 100): error: Expected line number
  -100 "foo"
  ^"
`;

exports[`program with non-numbered input 1`] = `
"/home/josh/script.bas:<R2>:0 (after line 100): error: Expected line number
  "foo"
  ^"
`;
