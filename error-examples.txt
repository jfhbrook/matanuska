# syntax errors

>>> fn lol():
  File "<stdin>", line 1
    fn lol():
       ^^^
SyntaxError: invalid syntax

> fn lol() {
fn lol() {
   ^^^

Uncaught SyntaxError: Unexpected identifier 'lol'

  File "/Users/josh/Software/jfhbrook/matanuska/test.py", line 1
    fn lol():
       ^^^
SyntaxError: invalid syntax

/Users/josh/Software/jfhbrook/crafting-interpreters/clox/src/main.c:49:3: error: expected ')'
  InterpretResult result = interpret(source);
  ^
/Users/josh/Software/jfhbrook/crafting-interpreters/clox/src/main.c:48:26: note: to match this '('
  char *source = readFile(path
                         ^
/Users/josh/Software/jfhbrook/crafting-interpreters/clox/src/main.c:52:7: error: use of undeclared identifier 'result'
  if (result == INTERPRET_COMPILE_ERROR)
      ^
/Users/josh/Software/jfhbrook/crafting-interpreters/clox/src/main.c:54:7: error: use of undeclared identifier 'result'
  if (result == INTERPRET_RUNTIME_ERROR)
      ^
3 errors generated.

# runtime errors

>>> 1 / "pony"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for /: 'int' and 'str'

# warnings

/Users/josh/Software/jfhbrook/matanuska/test.py:3: DeprecationWarning: derprecated
  warnings.warn('derprecated', DeprecationWarning)

# throwing non-errors

❯ node            
Welcome to Node.js v21.6.1.
Type ".help" for more information.
> throw "baby";
Uncaught 'baby'
> throw new Error('baby');
Uncaught Error: baby
>
